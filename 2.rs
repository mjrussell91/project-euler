// Author: Matthew Russell
// Project Euler - Problem 2
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

fn main() {
    let limit: i64 = 40000000;
    let mut sum:i64 = 2;
    let mut term: i64 = 3;
    let mut prev_term: i64 = 2;

    while term + prev_term < limit {
        if term % 2 == 0 {
            sum += term;
            println!("{term} is an even fibonacci term", term=term);
        }
        // println!("term: {0}, prev term: {1}", term, prev_term);
        term += prev_term;
        prev_term = term - prev_term;
    }

    println!("The sum of even fibonacci terms less than {limit} is: {sum}", sum=sum, limit=limit);
}
